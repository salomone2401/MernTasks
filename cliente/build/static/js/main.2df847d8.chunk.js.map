{"version":3,"sources":["config/axios.js","config/token.js","components/redux/actions.js","types/index.js","components/auth/Login.js","components/auth/NuevaCuenta.js","components/proyectos/NuevoProyecto.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","components/rutas/RutaPrivada.js","components/redux/reducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["clienteAxios","axios","create","baseURL","process","tokenAuth","token","defaults","headers","common","mostrarAlerta","msg","categoria","dispatch","a","type","payload","setTimeout","usuarioAutenticado","localStorage","getItem","get","respuesta","data","usuario","console","log","response","agregarProyecto","proyecto","post","resultado","obtenerTareas","params","tareas","actualizarTarea","tarea","put","_id","Login","autenticado","useSelector","state","mensaje","alerta","history","useHistory","useDispatch","useEffect","push","useState","email","password","guardarUsuario","onChange","e","target","name","value","className","onSubmit","datos","preventDefault","trim","htmlFor","id","placeholder","to","NuevaCuenta","props","nombre","confirmar","NuevoProyecto","formulario","errorformulario","guardarProyecto","onSubmitProyecto","onClick","Proyecto","seleccionarProyecto","proyectoId","ListadoProyectos","proyectos","undefined","length","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","FormTarea","tareaseleccionada","errortarea","setTarea","proyectoActual","agregarTarea","Tarea","tareaEliminar","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","eliminarTarea","cambiarEstado","estado","seleccionarTarea","guardarTareaActual","ListadoTareas","tareasproyecto","Proyectos","RutaPrivada","Component","component","cargando","render","initialState","rootReducer","action","setItem","removeItem","filter","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2df847d8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import {\n\tMOSTRAR_ALERTA,\n\tOCULTAR_ALERTA,\n\tREGISTRO_EXITOSO,\n\tREGISTRO_ERROR,\n\tOBTENER_USUARIO,\n\tLOGIN_EXITOSO,\n\tLOGIN_ERROR,\n\tCERRAR_SESION,\n\tFORMULARIO_PROYECTO,\n\tOBTENER_PROYECTOS,\n\tAGREGAR_PROYECTO,\n\tPROYECTO_ERROR,\n\tVALIDAR_FORMULARIO,\n\tPROYECTO_ACTUAL,\n\tELIMINAR_PROYECTO,\n\tTAREAS_PROYECTO,\n\tAGREGAR_TAREA,\n\tVALIDAR_TAREA,\n\tELIMINAR_TAREA,\n\tTAREA_ACTUAL,\n\tACTUALIZAR_TAREA,\n\tLIMPIAR_TAREA,\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nexport const mostrarAlerta = (msg, categoria) => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: MOSTRAR_ALERTA,\n\t\t\tpayload: {\n\t\t\t\tmsg,\n\t\t\t\tcategoria,\n\t\t\t},\n\t\t});\n\n\t\t// Después de 5 segundos limpiar la alerta\n\t\tsetTimeout(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: OCULTAR_ALERTA,\n\t\t\t});\n\t\t}, 5000);\n\t};\n};\n\nexport const registrarUsuario = (datos) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst respuesta = await clienteAxios.post('/api/usuarios', datos);\n\t\t\tconsole.log(respuesta.data);\n\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTRO_EXITOSO,\n\t\t\t\tpayload: respuesta.data,\n\t\t\t});\n\n\t\t\t// Obtener el usuario\n\t\t\tusuarioAutenticado();\n\t\t} catch (error) {\n\t\t\t// console.log(error.response.data.msg);\n\t\t\tconst alerta = {\n\t\t\t\tmsg: error.response.data.msg,\n\t\t\t\tcategoria: 'alerta-error',\n\t\t\t};\n\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTRO_ERROR,\n\t\t\t\tpayload: alerta,\n\t\t\t});\n\t\t}\n\t};\n};\n\n// Retorna el usuario autenticado\nexport const usuarioAutenticado = () => {\n\treturn async (dispatch) => {\n\t\tconst token = localStorage.getItem('token');\n\t\tif (token) {\n\t\t\ttokenAuth(token);\n\t\t}\n\n\t\ttry {\n\t\t\tconst respuesta = await clienteAxios.get('/api/auth');\n\t\t\t// console.log(respuesta);\n\t\t\tdispatch({\n\t\t\t\ttype: OBTENER_USUARIO,\n\t\t\t\tpayload: respuesta.data.usuario,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response);\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_ERROR,\n\t\t\t});\n\t\t}\n\t};\n};\n\n// Cuando el usuario inicia sesión\nexport const iniciarSesion = (datos) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst respuesta = await clienteAxios.post('/api/auth', datos);\n\t\t\tconsole.log(respuesta);\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_EXITOSO,\n\t\t\t\tpayload: respuesta.data,\n\t\t\t});\n\n\t\t\t// Obtener el usuario\n\t\t\tusuarioAutenticado();\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response.data.msg);\n\t\t\tconst alerta = {\n\t\t\t\tmsg: error.response.data.msg,\n\t\t\t\tcategoria: 'alerta-error',\n\t\t\t};\n\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_ERROR,\n\t\t\t\tpayload: alerta,\n\t\t\t});\n\t\t}\n\t};\n};\n\n// Cierra la sesión del usuario\nexport const cerrarSesion = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: CERRAR_SESION,\n\t\t});\n\t};\n};\n\nexport const mostrarFormulario = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: FORMULARIO_PROYECTO,\n\t\t});\n\t};\n};\n\n// Obtener los proyectos\nexport const obtenerProyectos = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resultado = await clienteAxios.get('/api/proyectos');\n\n\t\t\tdispatch({\n\t\t\t\ttype: OBTENER_PROYECTOS,\n\t\t\t\tpayload: resultado.data.proyectos,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconst alerta = {\n\t\t\t\tmsg: 'Hubo un error',\n\t\t\t\tcategoria: 'alerta-error',\n\t\t\t};\n\n\t\t\tdispatch({\n\t\t\t\ttype: PROYECTO_ERROR,\n\t\t\t\tpayload: alerta,\n\t\t\t});\n\t\t}\n\t};\n};\n\n// Agregar nuevo proyecto\nexport const agregarProyecto = (proyecto) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resultado = await clienteAxios.post('/api/proyectos', proyecto);\n\t\t\tconsole.log(resultado);\n\t\t\t// Insertar el proyecto en el state\n\t\t\tdispatch({\n\t\t\t\ttype: AGREGAR_PROYECTO,\n\t\t\t\tpayload: resultado.data,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconst alerta = {\n\t\t\t\tmsg: 'Hubo un error',\n\t\t\t\tcategoria: 'alerta-error',\n\t\t\t};\n\n\t\t\tdispatch({\n\t\t\t\ttype: PROYECTO_ERROR,\n\t\t\t\tpayload: alerta,\n\t\t\t});\n\t\t}\n\t};\n};\n\n// Valida el formulario por errores\nexport const mostrarError = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: VALIDAR_FORMULARIO,\n\t\t});\n\t};\n};\n\n// Selecciona el Proyecto que el usuario dio click\nexport const proyectoActual = (proyectoId) => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: PROYECTO_ACTUAL,\n\t\t\tpayload: proyectoId,\n\t\t});\n\t};\n};\n\n// Elimina un proyecto\nexport const eliminarProyecto = (proyectoId) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tawait clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n\t\t\tdispatch({\n\t\t\t\ttype: ELIMINAR_PROYECTO,\n\t\t\t\tpayload: proyectoId,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconst alerta = {\n\t\t\t\tmsg: 'Hubo un error',\n\t\t\t\tcategoria: 'alerta-error',\n\t\t\t};\n\n\t\t\tdispatch({\n\t\t\t\ttype: PROYECTO_ERROR,\n\t\t\t\tpayload: alerta,\n\t\t\t});\n\t\t}\n\t};\n};\n\n// Obtener las tareas de un proyecto\nexport const obtenerTareas = (proyecto) => {\n\treturn async (dispatch) => {\n\t\tconsole.log(proyecto);\n\n\t\ttry {\n\t\t\tconst resultado = await clienteAxios.get('/api/tareas', {\n\t\t\t\tparams: { proyecto },\n\t\t\t});\n\t\t\tconsole.log(resultado);\n\t\t\tdispatch({\n\t\t\t\ttype: TAREAS_PROYECTO,\n\t\t\t\tpayload: resultado.data.tareas,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response);\n\t\t}\n\t};\n};\n\n// Agregar una tarea al proyecto seleccionado\nexport const agregarTarea = (tarea) => {\n\treturn async (dispatch) => {\n\t\tconsole.log(tarea);\n\t\ttry {\n\t\t\tconst resultado = await clienteAxios.post('/api/tareas', tarea);\n\t\t\tconsole.log(resultado);\n\t\t\tdispatch({\n\t\t\t\ttype: AGREGAR_TAREA,\n\t\t\t\tpayload: tarea,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n// Valida y muestra un error en caso de que sea necesario\nexport const validarTarea = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: VALIDAR_TAREA,\n\t\t});\n\t};\n};\n\n// Eliminar tarea por id\nexport const eliminarTarea = (id, proyecto) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tawait clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto } });\n\t\t\tdispatch({\n\t\t\t\ttype: ELIMINAR_TAREA,\n\t\t\t\tpayload: id,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\n// Edita o modifica una tarea\nexport const actualizarTarea = (tarea) => {\n\tconsole.log(tarea);\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resultado = await clienteAxios.put(\n\t\t\t\t`/api/tareas/${tarea._id}`,\n\t\t\t\ttarea\n\t\t\t);\n\n\t\t\tdispatch({\n\t\t\t\ttype: ACTUALIZAR_TAREA,\n\t\t\t\tpayload: resultado.data.tarea,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\n// Extrae una tarea para edición\nexport const guardarTareaActual = (tarea) => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: TAREA_ACTUAL,\n\t\t\tpayload: tarea,\n\t\t});\n\t};\n};\n\n// Elimina la tareaseleccionada\nexport const limpiarTarea = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({\n\t\t\ttype: LIMPIAR_TAREA,\n\t\t});\n\t};\n};\n","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO'\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS'\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { iniciarSesion, mostrarAlerta } from '../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Login = () => {\n\tconst autenticado = useSelector((state) => state.autenticado);\n\tconst mensaje = useSelector((state) => state.mensaje);\n\tconst alerta = useSelector((state) => state.alerta);\n\n\tconst history = useHistory();\n\n\tconst dispatch = useDispatch();\n\tconsole.log(autenticado);\n\t// En caso de que el password o usuario no exista\n\tuseEffect(() => {\n\t\tif (autenticado) {\n\t\t\thistory.push('/proyectos');\n\t\t\t\n\t\t}\n\n\t\tif (mensaje) {\n\t\t\tdispatch(mostrarAlerta(mensaje.msg, mensaje.categoria));\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [mensaje, autenticado]);\n\n\t// State para iniciar sesión\n\tconst [usuario, guardarUsuario] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\t// extraer de usuario\n\tconst { email, password } = usuario;\n\n\tconst onChange = (e) => {\n\t\tguardarUsuario({\n\t\t\t...usuario,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\t// Cuando el usuario quiere iniciar sesión\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// Validar que no haya campos vacios\n\t\tif (email.trim() === '' || password.trim() === '') {\n\t\t\tdispatch(\n\t\t\t\tmostrarAlerta('Todos los campos son obligatorios', 'alerta-error')\n\t\t\t);\n\t\t}\n\t\tdispatch(iniciarSesion({ email, password }));\n\t};\n\n\treturn (\n\t\t<div className='form-usuario'>\n\t\t\t{alerta ? (\n\t\t\t\t<div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\n\t\t\t) : null}\n\n\t\t\t<div className='contenedor-form sombra-dark'>\n\t\t\t\t<h1>Iniciar Sesión</h1>\n\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tplaceholder='Tu Email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tplaceholder='Tu Password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tclassName='btn btn-primario btn-block'\n\t\t\t\t\t\t\tvalue='Iniciar Sesión'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<Link to={'/nueva-cuenta'} className='enlace-cuenta'>\n\t\t\t\t\tObtener Cuenta\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { mostrarAlerta, registrarUsuario } from '../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst NuevaCuenta = (props) => {\n\tconst dispatch = useDispatch();\n\tconst autenticado = useSelector((state) => state.autenticado);\n\tconst mensaje = useSelector((state) => state.mensaje);\n\n\tconst alerta = useSelector((state) => state.alerta);\n\tconst history = useHistory();\n\t// En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\n\tuseEffect(() => {\n\t\tif (autenticado) {\n\t\t\thistory.push('/proyectos');\n\t\t}\n\n\t\tif (mensaje) {\n\t\t\tdispatch(mostrarAlerta(mensaje.msg, mensaje.categoria));\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [mensaje, autenticado]);\n\n\t// State para iniciar sesión\n\tconst [usuario, guardarUsuario] = useState({\n\t\tnombre: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tconfirmar: '',\n\t});\n\n\t// extraer de usuario\n\tconst { nombre, email, password, confirmar } = usuario;\n\n\tconst onChange = (e) => {\n\t\tguardarUsuario({\n\t\t\t...usuario,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\t// Cuando el usuario quiere iniciar sesión\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// // Validar que no haya campos vacios\n\t\t// if(\n\t\t// \tnombre.trim() === '' ||\n\t\t// \temail.trim() === '' ||\n\t\t// \tpassword.trim() === '' ||\n\t\t// \tconfirmar.trim() === ''\n\t\t// ) {\n\t\t// \tdispatch(\n\t\t// \t\tmostrarAlerta('Todos los campos son obligatorios', 'alerta-error')\n\t\t// \t);\n\t\t// }\n\t\t// if (password.length < 6) {\n\t\t// \tdispatch(\n\t\t// \t\tmostrarAlerta(\n\t\t// \t\t\t'El password debe ser de al menos 6 caracteres',\n\t\t// \t\t\t'alerta-error'\n\t\t// \t\t)\n\t\t// \t);\n\t\t// }\n\t\t// if (password !== confirmar) {\n\t\t// \tdispatch(mostrarAlerta('Los passwords no son iguales', 'alerta-error'));\n\t\t// }\n\n\t\t// Pasarlo al action\n\t\n        dispatch(registrarUsuario({nombre, email, password }));\n\t\n    \n    };\n\n\treturn (\n\t\t<div className='form-usuario'>\n\t\t\t{alerta ? (\n\t\t\t\t<div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div>\n\t\t\t) : null}\n\t\t\t<div className='contenedor-form sombra-dark'>\n\t\t\t\t<h1>Obtener una cuenta</h1>\n\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<label htmlFor='nombre'>Nombre</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='nombre'\n\t\t\t\t\t\t\tname='nombre'\n\t\t\t\t\t\t\tplaceholder='Tu Nombre'\n\t\t\t\t\t\t\tvalue={nombre}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tplaceholder='Tu Email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tplaceholder='Tu Password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<label htmlFor='confirmar'>Confirmar Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='confirmar'\n\t\t\t\t\t\t\tname='confirmar'\n\t\t\t\t\t\t\tplaceholder='Repite tu Password'\n\t\t\t\t\t\t\tvalue={confirmar}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='campo-form'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tclassName='btn btn-primario btn-block'\n\t\t\t\t\t\t\tvalue='Registrarme'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<Link to={'/'} className='enlace-cuenta'>\n\t\t\t\t\tVolver a Iniciar Sesión\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default NuevaCuenta;\n","import React, { Fragment, useState } from 'react';\nimport {useSelector, useDispatch } from 'react-redux';\nimport { mostrarError,  agregarProyecto, mostrarFormulario } from '../redux/actions';\n\n\nconst NuevoProyecto = () => {\n\n    const  formulario = useSelector(state => state.formulario);\n    const  errorformulario = useSelector(state => state.errorformulario);\n    const dispatch = useDispatch()\n    // State para Proyecto\n    const [proyecto, guardarProyecto] = useState({\n        nombre: ''\n    });\n\n    // Extraer nombre de proyecto\n    const { nombre } = proyecto;\n\n    // Lee los contenidos del input\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Cuando el usuario envia un proyecto\n    const onSubmitProyecto = async e => {\n        e.preventDefault();\n\n        // Validar el proyecto\n        if(nombre === '') {\n            dispatch(mostrarError());\n            return;\n        }\n        // agregar al state\n       dispatch(agregarProyecto(proyecto))\n    \n        // Reiniciar el form\n        guardarProyecto({\n            nombre: ''\n        })\n    }\n\n    // Mostrar el formulario\n    const onClickFormulario = () => {\n        dispatch(mostrarFormulario());\n    }\n\n    return ( \n        <Fragment>\n            <button \n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={ onClickFormulario }\n            >Nuevo Proyecto</button>\n\n            { formulario ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProyecto}\n                        >\n                            <input \n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Nombre Proyecto\"\n                                name=\"nombre\"\n                                value={nombre}\n                                onChange={onChangeProyecto}\n                            />\n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Agregar Proyecto\"\n                            />\n\n                        </form>\n                ) : null }\n\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>  : null }\n        </Fragment>\n     );\n}\n \nexport default NuevoProyecto;","import React from 'react';\nimport {useDispatch } from 'react-redux';\nimport { proyectoActual, obtenerTareas } from '../redux/actions';\n\n\n\nconst Proyecto = ({proyecto}) => {\n    const dispatch = useDispatch()\n\n    // Función para agregar el proyecto actual\n    const seleccionarProyecto = id => {\n        dispatch(proyectoActual(id)); // Fijar un proyecto actual\n        dispatch(obtenerTareas(id)); // Filtrar las tareas cuando se de click\n    }\n\n    return ( \n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => seleccionarProyecto(proyecto._id) }\n            >{proyecto.nombre} </button>\n        </li>\n     );\n}\n \nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {useSelector } from 'react-redux';\nimport {useDispatch } from 'react-redux';\nimport { mostrarAlerta, obtenerProyectos } from '../redux/actions';\nconst ListadoProyectos = () => {\n\n\n    const dispatch = useDispatch()\n    const mensaje = useSelector(state => state.mensaje);\n     const alerta = useSelector(state => state.alerta);\n     const proyectos= useSelector(state => state.proyectos);\n    // Obtener proyectos cuando carga el componente\n    useEffect(() => {\n        // si hay un error\n        if(mensaje) {\n            dispatch(mostrarAlerta(mensaje.msg, mensaje.categoria));\n        }\n\n        dispatch(obtenerProyectos());\n        // eslint-disable-next-line\n    }, [mensaje]);\n\n    // revisar si proyectos tiene contenido\n    if(proyectos !== undefined && proyectos.length === 0){\n          return <p>No hay proyectos, comienza creando uno</p>;\n    }\n    return ( \n\n        <ul className=\"listado-proyectos\">\n            \n        \n            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\n\n\n            <TransitionGroup>\n                {proyectos !== undefined ?\n                \n                proyectos.map(proyecto => (\n                    <CSSTransition\n                        key={proyecto.id}\n                        timeout={200}\n                        classNames=\"proyecto\"\n                    >\n                        <Proyecto \n                            proyecto={proyecto}\n                        />\n                    </CSSTransition>\n                ))\n                : null}\n            </TransitionGroup>\n        </ul>\n     );\n}\n \nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n\n            <NuevoProyecto />\n\n            <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n                <ListadoProyectos />\n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, {useEffect} from 'react';\nimport { cerrarSesion, usuarioAutenticado } from '../redux/actions';\nimport {useSelector,useDispatch } from 'react-redux';\n\nconst Barra = () => {\n    const dispatch = useDispatch()\n    const usuario = useSelector(state => state.usuario);\n\n\n\n    useEffect(() => {\n     usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n\n\n    return ( \n        <header className=\"app-header\">\n            {usuario ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre} </span> </p> : null}\n            \n\n            <nav className=\"nav-principal\">\n                <button \n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={() => dispatch(cerrarSesion()) }\n                >Cerrar Sesión</button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Barra;","import React, { useState, useEffect } from 'react';\nimport {\n\tactualizarTarea,\n\tagregarTarea,\n\tlimpiarTarea,\n\tobtenerTareas,\n\tvalidarTarea,\n} from '../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst FormTarea = () => {\n\tconst tareaseleccionada = useSelector((state) => state.tareaseleccionada);\n\tconst proyecto = useSelector((state) => state.proyecto);\n\tconst errortarea = useSelector((state) => state.errortarea);\n\n\tconst dispatch = useDispatch();\n\n\n\t// // State del formulario\n\t const [tarea, setTarea] = useState({\n         nombre: ''\n     });\n   const { nombre } = tarea;\n \n\tconsole.log('TAREAAAAA',tarea)\n    \n\n\t const handleChange = (e) => {\n\t\tsetTarea({\n \t\t...tarea,\n\t \t\t[e.target.name]: e.target.value,\n\t \t});\n\t };\n\n    useEffect(() => {\n\t\tif (tareaseleccionada !== null) {\n\t\t\tsetTarea(tareaseleccionada);\n\t\t} \n        else {\n\t\t\tsetTarea({\n\t\t\t\tnombre: '',\n\t\t\t});\n\t\t}\n\t}, [tareaseleccionada]);\n\n\t// Si no hay proyecto seleccionado\n\tif (!proyecto) return null;\n\n\t// Array destructuring para extraer el proyecto actual\n\tconst [proyectoActual] = proyecto;\n\n\n\t// Effect que detecta si hay una tarea seleccionada\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// // validar\n\t\tif (nombre.trim() === '') {\n\t\t\tvalidarTarea();\n\t\t\treturn;\n\t\t}\n\n\t\t// Si es edición o si es nueva tarea\n\t\tif (tareaseleccionada === null) {\n\t\t\t// agregar la nueva tarea al state de tareas\n\t\t\ttarea.proyecto = proyectoActual._id;\n\t\t\tdispatch(agregarTarea(tarea));\n\t\t} else {\n\t\t\t// actualizar tarea existente\n\t\t\tdispatch(actualizarTarea(tarea));\n\n\t\t\t// Elimina tareaseleccionada del state\n\t\t\tdispatch(limpiarTarea());\n\t\t}\n\t\t// Obtener y filtrar las tareas del proyecto actual\n\t\tdispatch(obtenerTareas(proyectoActual.id));\n\n\t\t// // reiniciar el form\n\t\t// setTarea({\n\t\t// \tnombre: '',\n\t\t// });\n\t};\n\n\n\treturn (\n\t\t<div className='formulario'>\n\t\t\t<form onSubmit={ handleSubmit}>\n\t\t\t\t<div className='contenedor-input'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='input-text'\n\t\t\t\t\t\tplaceholder='Nombre Tarea...'\n\t\t\t\t\t\tname='nombre'\n\t\t\t\t\t\tvalue={nombre}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='contenedor-input'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tclassName='btn btn-primario btn-submit btn-block'\n\t\t\t\t\t\tvalue={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t{errortarea ? (\n\t\t\t\t<p className='mensaje error'>El nombre de la tarea es obligatorio</p>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default FormTarea;\n","import React from 'react';\nimport { actualizarTarea, eliminarTarea, guardarTareaActual, obtenerTareas } from '../redux/actions';\nimport {useSelector, useDispatch  } from 'react-redux';\nimport Swal from 'sweetalert2'\n\nconst Tarea = ({tarea}) => {\n    \n    const proyecto = useSelector(state => state.proyecto);\n  \n    // Extraer el proyecto\n    const [proyectoActual] = proyecto;\n    const dispatch = useDispatch()\n\n    // Función que se ejecuta cuando el usuario presiona el btn de eliminar tarea\n    const tareaEliminar = id => {\n      \n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                'Deleted!',\n                'Your file has been deleted.',\n                'success'\n              )\n            }\n            dispatch(eliminarTarea(id, proyectoActual._id));\n            dispatch(obtenerTareas(proyectoActual.id))\n          })\n    }\n\n\n    // Función que modifica el estado de las tareas\n    const cambiarEstado = tarea => {\n        if(tarea.estado) {\n            tarea.estado = false;\n        } else {\n            tarea.estado = true\n        }\n        dispatch(actualizarTarea(tarea));\n    }\n\n    // Agrega una tarea actual cuando el usuario desea editarla\n    const seleccionarTarea = tarea => {\n        dispatch(guardarTareaActual(tarea));\n    }\n\n    return ( \n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre} </p>\n\n            <div className=\"estado\">\n                {tarea.estado \n                ?  \n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Completo</button>\n                    )\n                : \n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => cambiarEstado(tarea)}\n                        >Incompleto</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button \n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => seleccionarTarea(tarea) }\n                >Editar</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => tareaEliminar(tarea._id)}\n                >Eliminar</button>\n            </div>\n        </li>\n     );\n}\n \nexport default Tarea;","import React, { Fragment, useContext} from 'react';\nimport Tarea from './Tarea';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { eliminarProyecto } from '../redux/actions';\nimport {useSelector, useDispatch  } from 'react-redux';\nconst ListadoTareas = () => {\n\n    \n    const proyecto = useSelector(state => state.proyecto);\n    const tareasproyecto = useSelector(state => state.tareasproyecto);\n    const dispatch = useDispatch()\n\n    // Si no hay proyecto seleccionado\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>;\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] =  proyecto;\nconsole.log(proyectoActual._id)\n    // Elimina un proyecto\n    const onClickEliminar = () => {\n        dispatch(eliminarProyecto(proyectoActual._id))\n    }\n\n    return ( \n        <Fragment>\n            <h2>Proyecto: {proyectoActual.nombre} </h2>\n\n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0 \n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>) \n                    : \n                    <TransitionGroup>\n                    {tareasproyecto.map(tarea => (\n                        <CSSTransition\n                            key={tarea.id}\n                            timeout={200}\n                            classNames=\"tarea\"\n                        >\n                            <Tarea \n                                tarea={tarea}\n                            />\n                        </CSSTransition>\n                    ))}\n                    </TransitionGroup>\n                }\n            </ul>\n\n            <button     \n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={onClickEliminar}\n            >Eliminar Proyecto &times;</button>\n        </Fragment>\n     );\n}\n \nexport default ListadoTareas;","import React, {useEffect } from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTareas from '../tareas/ListadoTareas';\nimport {usuarioAutenticado } from '../redux/actions';\nimport {useDispatch } from 'react-redux';\n\n\nconst Proyectos = () => {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(usuarioAutenticado());\n        // eslint-disable-next-line\n    }, [])\n\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n                <Barra />\n\n                <main>\n                    <FormTarea />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n     );\n}\n \nexport default Proyectos;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {useSelector } from 'react-redux';\nimport { usuarioAutenticado } from '../redux/actions';\nimport {useDispatch } from 'react-redux';\nconst RutaPrivada = ({ component: Component, ...props  }) => {\n\n    const  autenticado = useSelector(state => state.autenticado);\n    const  cargando = useSelector(state => state.cargando);\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(usuarioAutenticado());\n        // eslint-disable-next-line\n    }, []);\n\n    return ( \n        <Route { ...props } render={ props => !autenticado && !cargando ?  (\n            <Redirect to=\"/\" />\n        )  : (\n            <Component {...props} />\n        ) } />\n\n     );\n}\n \nexport default RutaPrivada;","import {\n \n    MOSTRAR_ALERTA, \n    OCULTAR_ALERTA,\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO,\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\nconst initialState = {\n    alerta: null,\n    token: localStorage.getItem('token'),\n    autenticado: false,\n    usuario: null, \n    mensaje: null, \n    cargando: true,\n    proyectos : [],\n    formulario : false,\n    errorformulario: false,\n    proyecto: null, \n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n}\n\n\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n            case REGISTRO_EXITOSO:\n                case LOGIN_EXITOSO:\n                    localStorage.setItem('token', action.payload.token);\n                    return {\n                        ...state,\n                        autenticado: true,\n                        mensaje: null,\n                        cargando: false\n                    }\n                case OBTENER_USUARIO: \n           \n                    return {\n                        ...state,\n                        autenticado: true,\n                        usuario: action.payload, \n                        cargando: false\n                    }\n                case CERRAR_SESION:\n                case LOGIN_ERROR:\n                case REGISTRO_ERROR:\n                    localStorage.removeItem('token');\n                    return {\n                        ...state,\n                        token: null,\n                        usuario: null,\n                        autenticado: null,\n                        mensaje: action.payload, \n                        cargando: false\n                    }\n                    case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario: false,\n                errorformulario: false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state, \n                errorformulario: true\n            }\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload )\n            }\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload ),\n                proyecto: null\n            }\n        case PROYECTO_ERROR:\n            return {\n                ...state,\n                mensaje: action.payload\n            }\n            case TAREAS_PROYECTO:\n                return {\n                    ...state,\n                    tareasproyecto: action.payload\n                }\n            case AGREGAR_TAREA:\n                return {\n                    ...state,\n                    tareasproyecto: [action.payload, ...state.tareasproyecto],\n                    errortarea: false\n                }\n            case VALIDAR_TAREA:\n                return {\n                    ...state,\n                    errortarea: true\n                }\n            case ELIMINAR_TAREA:\n                return {\n                    ...state,\n                    tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload )\n                }\n            case ACTUALIZAR_TAREA:\n                return {\n                    ...state,\n                    tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea )\n                }\n            case TAREA_ACTUAL:\n                console.log('HOLAAAA',action.payload)\n                return {\n                    ...state,\n                    tareaseleccionada: action.payload\n                }\n            case LIMPIAR_TAREA:\n                return {\n                    ...state,\n                    tareaseleccionada: null\n                }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./components/redux/reducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk),\n\n    typeof window === 'object' &&\n      typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ?\n      window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\nimport store from './store';\nimport { Provider } from 'react-redux';\n// Revisar si tenemos un token\nconst token = localStorage.getItem('token');\nif (token) {\n\ttokenAuth(token);\n}\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Provider store={store}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={Login} />\n\t\t\t\t\t<Route exact path='/nueva-cuenta' component={NuevaCuenta} />\n\t\t\t\t\t<RutaPrivada exact path='/proyectos' component={Proyectos} />\n\t\t\t\t</Switch>\n\t\t\t</Provider>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}